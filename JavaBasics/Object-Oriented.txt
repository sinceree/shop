面向对象三大特征：封装、继承和多态

类和对象的区别：
1.对象是具体的事物，类是对对象的抽象
2.类是看成一类对象的模板，对象可以看成是该类的具体实例
3.类是描述同一类型对象的一个抽象概念，类定义了这一类对象所对应具有的共同属性和方法

类的定义：一般具有三个成员，属性(成员变量)、方法和构造器
修饰符 class 类名 {
}

构造器：用于对象的初始化
修饰符 类名(形参){
}
1.通过new关键字调用
2.不能定义返回值类型，不能使用return返回某个值
3.我们没有定义构造器，系统会默认给生成一个构造器
4.构造器名必须要和类名一致

构造方法的重载：其定义与方法的重载一致
1.方法构造中形参名和属性名相同时，需要使用this关键字区分
2.this.id表示成员变量，id表示形参id
3.this不能用于static方法中

static关键字：
1.static声明的成员变量为静态成员变量，与类的生命周期一致
2.一般用“类名.类属性/方法”来调用
3.在static方法中不可直接访问非static的成员
4.static修饰的方法和成员变量从属于类；普通变量和方法从属于对象

静态初始化块：用于类的初始化，在静态初始化块中不能直接访问非static成员
静态初始化块执行顺序：上溯到Object类，先执行Object的静态初始化块，再向下执行子类的静态初始化块，直到我们的类的静态初始化块为止。

参数的传递：
1.基本数据类型传递的是数据的副本，副本改变不会影响原件
2.引用数据类型传递的是对象的地址，改变副本指向地址对象的值，意味着原参数指向对象的值也发生了改变

JDK中主要的包：
java.lang	包含一些Java语言的核心类，如String、Math、Integer、System和Thread，提供常用功能。
java.awt	包含了构成抽象窗口工具集（abstract window toolkits）的多个类，这些类被用来构建和管理应用程序的图形用户界面(GUI)。
java.net	包含执行与网络相关的操作的类。
java.io	包含能提供多种输入/输出功能的类。
java.util	包含一些实用工具类，如定义系统特性、使用与日期日历相关的函数。